<?xml version="1.0" encoding="UTF-8"?>
<!--
  Spring Boot has some logging documentation on the special properties / env vars for logging:

  https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.logging

  https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto.logging
-->
<configuration>

    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <!-- logs to /tmp/spring.ndjson by default -->
    <!--    <property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}/}spring.ndjson}"/>-->
    <property name="LOG_FILE" value="spring.ndjson"/>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!-- show at most DEBUG on console -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <encoder>
            <pattern>%date{H:mm:ss.SSS} %highlight(%-5level) [%thread]: %message%n%ex</pattern>
        </encoder>
    </appender>

    <!-- https://github.com/logfellow/logstash-logback-encoder -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
      <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
          <jsonGeneratorDecorator class="net.logstash.logback.decorate.PrettyPrintingJsonGeneratorDecorator"/>
          <providers>
              <timestamp>
                  <timeZone>UTC</timeZone>
              </timestamp>
              <version/>
              <message/>
              <loggerName/>
              <threadName/>
              <logLevel/>
              <logLevelValue/><!-- numeric value is useful for filtering >= -->
              <stackHash/>
              <!-- <mdc/> --> <!-- not showing mdc as we want to demo withContext() -->
              <logstashMarkers/>
              <arguments/>
              <stackTrace/>
          </providers>
      </encoder>

      <!-- use the default spring boot conventions here, but leverage a different encoder -->
      <file>${LOG_FILE}</file>
      <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
          <fileNamePattern>${LOGBACK_ROLLINGPOLICY_FILE_NAME_PATTERN:-${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz}</fileNamePattern>
          <cleanHistoryOnStart>${LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START:-false}</cleanHistoryOnStart>
          <maxFileSize>${LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE:-10MB}</maxFileSize>
          <totalSizeCap>${LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP:-0}</totalSizeCap>
          <maxHistory>${LOGBACK_ROLLINGPOLICY_MAX_HISTORY:-7}</maxHistory>
      </rollingPolicy>
    </appender>

    <!-- should be using the disruptor appender by default -->
    <appender name="ASYNCFILE" class="net.logstash.logback.appender.LoggingEventAsyncDisruptorAppender">
      <appender-ref ref="FILE"/>
    </appender>

    <logger name="com.example.restservice" level="DEBUG"/>

    <root level="INFO">
      <appender-ref ref="CONSOLE" />
      <appender-ref ref="ASYNCFILE" />
  </root>
</configuration>
